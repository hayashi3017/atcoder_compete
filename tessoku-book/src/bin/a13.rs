use proconio::input;

// TODO: 理解度が低いので見直しが必要そう
fn main() {
    input! {
        n: usize,
        k: usize,
        mut a: [usize;n],
    }
    // a[t] <= a[i] + k を満たす最大のtからなる配列x
    // つまりx[i]は a[x[i]] - a[i] =< kを満たす
    let mut x = vec![0; n];

    // 比較の基準は1個目からn-1個目まで
    for i in 0..n - 1 {
        if i == 0 {
            // 最初は1としてもよい、1 <= k より a[1] - a[1] < kを満たすため
            x[0] = 1;
        } else {
            // 同じ配列で比較しているためやってもよいのだと思われる
            x[i] = x[i - 1];
        }

        // x[i] < n - 1は定義としての前提である、aは長さnの配列なので
        // ここのx[i] + 1が重要な気がする。一つ先が条件をクリアするか確認している
        while x[i] < n - 1 && a[x[i] + 1] - a[i] <= k {
            x[i] += 1;
        }
    }

    let mut ans = 0;
    // 上で1からn-1の要素を利用する方針となっているので集計も合わせている
    // というかa[n-1]は最後の要素なので組み合わせそのものを考える必要がない
    for i in 0..n - 1 {
        // 漸化式のようなもの？
        ans += x[i] - i;
    }

    println!("{}", ans);
}
